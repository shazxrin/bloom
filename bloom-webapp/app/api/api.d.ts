/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/session/{id}": {
    put: operations["putUpdateSession"];
    delete: operations["deleteSession"];
  };
  "/api/session/tag/{id}": {
    put: operations["putUpdateTag"];
    delete: operations["deleteTag"];
  };
  "/api/session": {
    post: operations["postAddSession"];
  };
  "/api/session/tag": {
    post: operations["postCreateTag"];
  };
  "/api/session/current/resume": {
    post: operations["postResumeCurrentSession"];
  };
  "/api/session/current/pause": {
    post: operations["postPauseCurrentSession"];
  };
  "/api/session/current/end": {
    post: operations["postEndCurrentSession"];
  };
  "/api/session/current/create": {
    post: operations["postCreateCurrentSession"];
  };
  "/api/session/tag/all": {
    get: operations["getAllTags"];
  };
  "/api/session/current": {
    get: operations["getCurrentSession"];
  };
  "/api/session/all": {
    get: operations["getAllSessions"];
  };
  "/api/overview/yearly": {
    get: operations["getYearlyOverview"];
  };
  "/api/overview/weekly": {
    get: operations["getWeeklyOverview"];
  };
  "/api/overview/daily": {
    get: operations["getDailyOverview"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UpdateSessionDto: {
      name: string;
      tagId: string;
      /** Format: int64 */
      totalDuration: number;
      /** Format: date-time */
      startDateTime: string;
      /** Format: date-time */
      endDateTime: string;
    };
    UpdateTagDto: {
      name: string;
      color: string;
    };
    AddSessionDto: {
      name: string;
      tagId: string;
      /** Format: int64 */
      totalDuration: number;
      /** Format: date-time */
      startDateTime: string;
      /** Format: date-time */
      endDateTime: string;
    };
    CreateTagDto: {
      name: string;
      color: string;
    };
    CreateCurrentSessionDto: {
      name: string;
      tagId: string;
      /** Format: int64 */
      totalDuration: number;
    };
    ListTagDto: {
      id: string;
      name: string;
      color: string;
    };
    CurrentSessionDto: {
      name: string;
      tag: components["schemas"]["CurrentSessionTagDto"];
      /** Format: int64 */
      totalDuration: number;
      /** Format: int64 */
      remainingDuration: number;
      /** @enum {string} */
      status: "RUNNING" | "PAUSED" | "COMPLETED";
      /** Format: date-time */
      startDateTime: string;
      /** Format: date-time */
      resumeDateTime: string;
    };
    CurrentSessionTagDto: {
      name: string;
      color: string;
    };
    ListSessionDto: {
      id: string;
      name: string;
      tag: components["schemas"]["ListSessionTagDto"];
      /** Format: int64 */
      totalDuration: number;
      /** Format: date-time */
      startDateTime: string;
      /** Format: date-time */
      endDateTime?: string;
    };
    ListSessionTagDto: {
      id: string;
      name: string;
      color: string;
    };
    PagedListDtoListSessionDto: {
      /** Format: int32 */
      page: number;
      /** Format: int32 */
      totalPages: number;
      items: components["schemas"]["ListSessionDto"][];
    };
    SessionDateTotalDurationDto: {
      /** Format: date */
      date: string;
      /** Format: int64 */
      totalDuration: number;
    };
    YearlyOverviewDto: {
      sessionDateTotalDurations: components["schemas"]["SessionDateTotalDurationDto"][];
    };
    SessionTagTotalDurationDto: {
      tag: components["schemas"]["SessionTagTotalDurationSessionTagDto"];
      /** Format: int64 */
      totalDuration: number;
    };
    SessionTagTotalDurationSessionTagDto: {
      id: string;
      name: string;
      color: string;
    };
    WeeklyOverviewDto: {
      sessionTagTotalDurations: components["schemas"]["SessionTagTotalDurationDto"][];
      sessionDateTotalDurations: components["schemas"]["SessionDateTotalDurationDto"][];
    };
    DailyOverviewDto: {
      sessionTagTotalDurations: components["schemas"]["SessionTagTotalDurationDto"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  putUpdateSession: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateSessionDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  deleteSession: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  putUpdateTag: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateTagDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  deleteTag: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  postAddSession: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddSessionDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: never;
      };
    };
  };
  postCreateTag: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTagDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: never;
      };
    };
  };
  postResumeCurrentSession: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  postPauseCurrentSession: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  postEndCurrentSession: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  postCreateCurrentSession: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCurrentSessionDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: never;
      };
    };
  };
  getAllTags: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ListTagDto"][];
        };
      };
    };
  };
  getCurrentSession: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CurrentSessionDto"];
        };
      };
    };
  };
  getAllSessions: {
    parameters: {
      query: {
        page: number;
        tagId?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PagedListDtoListSessionDto"];
        };
      };
    };
  };
  getYearlyOverview: {
    parameters: {
      query?: {
        year?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["YearlyOverviewDto"];
        };
      };
    };
  };
  getWeeklyOverview: {
    parameters: {
      query?: {
        date?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["WeeklyOverviewDto"];
        };
      };
    };
  };
  getDailyOverview: {
    parameters: {
      query?: {
        date?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["DailyOverviewDto"];
        };
      };
    };
  };
}
